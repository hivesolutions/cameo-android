plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

group = "pt.hive.cameo"
version = "0.3.6"

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "cameo-android"
            from components.java
            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
            pom {
                name = "Cameo"
                description = "The Android version of the Cameo framework"
                url = "https://github.com/hivesolutions/cameo-android"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "hivesolutions"
                        name = "Hive Solutions Lda."
                        email = "development@hive.pt"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/hivesolutions/cameo-android.git"
                    developerConnection = "scm:git:ssh://github.com/hivesolutions/cameo-android.git"
                    url = "https://github.com/hivesolutions/cameo-android"
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir("repos/releases")
            def snapshotsRepoUrl = layout.buildDirectory.dir("repos/snapshots")
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}
